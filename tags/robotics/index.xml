<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Robotics on Antonin Raffin | Homepage</title>
    <link>/tags/robotics/</link>
    <description>Recent content in Robotics on Antonin Raffin | Homepage</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>&amp;copy; 2018</copyright>
    <lastBuildDate>Wed, 10 Oct 2018 00:00:00 +0200</lastBuildDate>
    
	<atom:link href="/tags/robotics/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>S-RL Toolbox</title>
      <link>/project/srl-toolbox/</link>
      <pubDate>Wed, 10 Oct 2018 00:00:00 +0200</pubDate>
      
      <guid>/project/srl-toolbox/</guid>
      <description> S-RL Toolbox: Reinforcement Learning (RL) and State Representation Learning (SRL) Toolbox for Robotics.
Github repository: https://github.com/araffin/robotics-rl-srl
Documentation: https://s-rl-toolbox.readthedocs.io
Paper: https://arxiv.org/abs/1809.09369
Main Features  10 RL algorithms (Stable Baselines included) logging / plotting / visdom integration / replay trained agent hyperparameter search (hyperband, hyperopt) integration with State Representation Learning (SRL) methods (for feature extraction) visualisation tools (explore latent space, display action proba, live plot in the state space, &amp;hellip;) robotics environments to compare SRL methods easy install using anaconda env or Docker images (CPU/GPU)  </description>
    </item>
    
    <item>
      <title>S-RL Toolbox: Environments, Datasets and Evaluation Metrics for State Representation Learning</title>
      <link>/publication/srl-toolbox/</link>
      <pubDate>Sat, 01 Sep 2018 00:00:00 +0200</pubDate>
      
      <guid>/publication/srl-toolbox/</guid>
      <description></description>
    </item>
    
    <item>
      <title>PythonRobotics: a Python code collection of robotics algorithms</title>
      <link>/publication/python-robotics/</link>
      <pubDate>Fri, 31 Aug 2018 00:00:00 +0200</pubDate>
      
      <guid>/publication/python-robotics/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Simple and Robust {Computer — Arduino} Serial Communication</title>
      <link>/post/arduino-serial/</link>
      <pubDate>Sat, 10 Feb 2018 00:00:00 +0100</pubDate>
      
      <guid>/post/arduino-serial/</guid>
      <description>Read the full article on Medium</description>
    </item>
    
    <item>
      <title>Autonomous Racing Robot With an Arduino, a Raspberry Pi and a Pi Camera</title>
      <link>/post/racing-robot/</link>
      <pubDate>Fri, 10 Nov 2017 00:00:00 +0100</pubDate>
      
      <guid>/post/racing-robot/</guid>
      <description>Read the full article on Medium</description>
    </item>
    
    <item>
      <title>Racing Robot</title>
      <link>/project/racing-robot/</link>
      <pubDate>Fri, 27 Oct 2017 00:00:00 +0200</pubDate>
      
      <guid>/project/racing-robot/</guid>
      <description>Autonomous toy racing car. CAMaleon team at the Toulouse Robot Race 2017. Humbavision team at IronCar. Medium article: https://medium.com/@araffin/autonomous-racing-robot-with-an-arduino-a-raspberry-pi-and-a-pi-camera-3e72819e1e63
Video of the car: https://www.youtube.com/watch?v=xhI71ZdSh6k</description>
    </item>
    
    <item>
      <title>Arduino Robust Serial</title>
      <link>/project/arduino-robust-serial/</link>
      <pubDate>Thu, 26 Oct 2017 00:00:00 +0200</pubDate>
      
      <guid>/project/arduino-robust-serial/</guid>
      <description>Robust Arduino Serial is a simple and robust serial communication protocol. It was designed to make two Arduinos communicate, but can also be useful when you want a computer (e.g. a Raspberry Pi) to communicate with an Arduino.
Please read the Medium Article to have an overview of this protocol.
Implementations are available in various programming languages:
 Arduino (arduino-serial/ folder) Python C++ Rust  </description>
    </item>
    
  </channel>
</rss>